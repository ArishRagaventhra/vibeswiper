create table public.payments (
  id uuid not null default gen_random_uuid (),
  user_id uuid not null,
  event_id text not null,
  amount numeric(10, 2) not null,
  razorpay_payment_id text not null,
  razorpay_order_id text null,
  status text not null default 'success'::text,
  created_at timestamp with time zone null default now(),
  payment_details jsonb null,
  error_message text null,
  updated_at timestamp with time zone null,
  constraint payments_pkey primary key (id),
  constraint payments_razorpay_payment_id_key unique (razorpay_payment_id),
  constraint payments_user_id_fkey foreign KEY (user_id) references auth.users (id)
) TABLESPACE pg_default;

create index IF not exists payments_user_id_idx on public.payments using btree (user_id) TABLESPACE pg_default;

create index IF not exists payments_event_id_idx on public.payments using btree (event_id) TABLESPACE pg_default;

create index IF not exists payments_razorpay_payment_id_idx on public.payments using btree (razorpay_payment_id) TABLESPACE pg_default;