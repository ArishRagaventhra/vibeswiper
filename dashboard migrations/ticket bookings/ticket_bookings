create table public.ticket_bookings (
  id uuid not null default extensions.uuid_generate_v4 (),
  booking_reference character varying(20) not null,
  user_id uuid not null,
  event_id uuid not null,
  quantity integer not null default 1,
  unit_price numeric(10, 2) not null,
  total_amount numeric(10, 2) not null,
  is_vibe_price boolean null default true,
  booking_status character varying(20) not null default 'pending'::character varying,
  payment_status character varying(20) not null default 'unpaid'::character varying,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint ticket_bookings_pkey primary key (id),
  constraint ticket_bookings_booking_reference_key unique (booking_reference),
  constraint fk_event foreign KEY (event_id) references events (id) on delete CASCADE,
  constraint fk_user foreign KEY (user_id) references profiles (id),
  constraint ticket_bookings_event_id_fkey foreign KEY (event_id) references events (id),
  constraint ticket_bookings_user_id_fkey foreign KEY (user_id) references profiles (id)
) TABLESPACE pg_default;